---
description: 
globs: 
alwaysApply: false
---
# 📋 Documentation Workflow Rules

## 🎯 핵심 원칙

### 요구사항 기반 설계 진행
모든 설계는 반드시 요구사항을 기반으로 진행되어야 합니다. 변경사항이 발생할 때는 전체적인 검토와 업데이트가 필요합니다.

## 📁 문서 구조 및 의존성

### 1단계: 정리 (Requirements)
- [1-1. 용어사전.md](mdc:docs/1. 정리/1-1. 용어사전.md) - RTB 관련 용어 정의
- [1-2. 요구사항.md](mdc:docs/1. 정리/1-2. 요구사항.md) - 일반 시스템 요구사항
- [1-3 RTB_요구사항.md](mdc:docs/1. 정리/1-3 RTB_요구사항.md) - RTB 시스템 요구사항

### 2단계: 설계 (Design)
- [2-1. 업무흐름.md](mdc:docs/2. 설계/2-1. 업무흐름.md) - 비즈니스 프로세스 플로우
- [2-2. 아키텍처.md](mdc:docs/2. 설계/2-2. 아키텍처.md) - 시스템 아키텍처 설계
- [2-3. 광고_테이블_설계.md](mdc:docs/2. 설계/2-3. 광고_테이블_설계.md) - 데이터베이스 스키마
- [2-4. 광고_토픽_설계.md](mdc:docs/2. 설계/2-4. 광고_토픽_설계.md) - Kafka 토픽 설계

### 3단계: 체크리스트 (Implementation)
- [3-1. 선행데이터_체크리스트.md](mdc:docs/3. 체크리스트/3-1. 선행데이터_체크리스트.md) - 초기 데이터 설정
- [3-2. 구현체크리스트_API.md](mdc:docs/3. 체크리스트/3-2. 구현체크리스트_API.md) - API 구현 항목
- [3-3. 구현체크리스트_Flink.md](mdc:docs/3. 체크리스트/3-3. 구현체크리스트_Flink.md) - Flink 구현 항목
- [3-4. 구현체크리스트_Worker.md](mdc:docs/3. 체크리스트/3-4. 구현체크리스트_Worker.md) - Worker 구현 항목

## 🔄 변경사항 전파 규칙

### 요구사항 변경 시 (1단계 → 2,3단계)
1. **용어사전 업데이트** → 모든 설계 문서의 용어 일관성 검토
2. **요구사항 변경** → 아키텍처, 테이블 설계, 토픽 설계 전면 재검토
3. **RTB 요구사항 변경** → Flink 구현 체크리스트 우선 업데이트

### 설계 변경 시 (2단계 → 3단계)
1. **업무흐름 변경** → API 구현 체크리스트 재검토
2. **아키텍처 변경** → 모든 구현 체크리스트 영향도 분석
3. **테이블 설계 변경** → API/Worker 체크리스트 DB 관련 항목 업데이트
4. **토픽 설계 변경** → Flink 체크리스트 스트림 처리 부분 재검토

### 구현 변경 시 (3단계 내부)
1. **선행데이터 변경** → 모든 구현 체크리스트의 데이터 의존성 검토
2. **API 구현 변경** → Flink/Worker와의 연동 부분 확인
3. **Flink 구현 변경** → 실시간 처리 관련 API/Worker 연동 확인

## ⚠️ 필수 검토 사항

### 문서 수정 시 반드시 확인할 것들
1. **용어 일관성**: [용어사전](mdc:docs/1. 정리/1-1. 용어사전.md)과 일치하는지 확인
2. **요구사항 추적성**: 모든 설계가 요구사항에서 파생되었는지 확인
3. **아키텍처 정합성**: 설계 문서 간 충돌이 없는지 확인
4. **구현 실현 가능성**: 체크리스트가 설계를 제대로 반영하는지 확인

### 특별 주의 사항
- **RTB 성능 요구사항**: 3-5ms 응답시간 관련 모든 설계 검토
- **실시간 처리**: Kafka 토픽과 Flink 처리 로직 일치성 확인
- **데이터 일관성**: 테이블 설계와 API/Worker 구현 일치성 확인

## 🚨 변경 전 체크리스트

문서를 수정하기 전에 다음을 확인하세요:

1. **상위 문서 검토**: 해당 변경이 상위 요구사항과 일치하는가?
2. **하위 문서 영향도**: 이 변경이 하위 설계/구현에 미치는 영향은?
3. **전체 일관성**: 전체 문서 체계에서 모순이 발생하지 않는가?
4. **README 업데이트**: 중요한 변경사항은 README에도 반영되어야 함

## 📝 권장 작업 순서

1. **요구사항 확인** → 관련 1단계 문서 검토
2. **설계 영향도 분석** → 관련 2단계 문서들 순차 검토
3. **구현 체크리스트 업데이트** → 관련 3단계 문서들 업데이트
4. **전체 일관성 검증** → 모든 문서 간 정합성 최종 확인
5. **README 반영** → 중요 변경사항 프로젝트 개요에 반영
